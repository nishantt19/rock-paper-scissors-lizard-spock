{
     "abi": [
          {
               "type": "constructor",
               "inputs": [
                    {
                         "name": "_c1Hash",
                         "type": "bytes32"
                    },
                    {
                         "name": "_j2",
                         "type": "address"
                    }
               ],
               "stateMutability": "payable"
          },
          {
               "type": "function",
               "name": "TIMEOUT",
               "inputs": [],
               "outputs": [
                    {
                         "name": "",
                         "type": "uint256"
                    }
               ],
               "stateMutability": "view"
          },
          {
               "type": "function",
               "name": "c1Hash",
               "inputs": [],
               "outputs": [
                    {
                         "name": "",
                         "type": "bytes32"
                    }
               ],
               "stateMutability": "view"
          },
          {
               "type": "function",
               "name": "c2",
               "inputs": [],
               "outputs": [
                    {
                         "name": "",
                         "type": "uint8"
                    }
               ],
               "stateMutability": "view"
          },
          {
               "type": "function",
               "name": "j1",
               "inputs": [],
               "outputs": [
                    {
                         "name": "",
                         "type": "address"
                    }
               ],
               "stateMutability": "view"
          },
          {
               "type": "function",
               "name": "j1Timeout",
               "inputs": [],
               "outputs": [],
               "stateMutability": "nonpayable"
          },
          {
               "type": "function",
               "name": "j2",
               "inputs": [],
               "outputs": [
                    {
                         "name": "",
                         "type": "address"
                    }
               ],
               "stateMutability": "view"
          },
          {
               "type": "function",
               "name": "j2Timeout",
               "inputs": [],
               "outputs": [],
               "stateMutability": "nonpayable"
          },
          {
               "type": "function",
               "name": "lastAction",
               "inputs": [],
               "outputs": [
                    {
                         "name": "",
                         "type": "uint256"
                    }
               ],
               "stateMutability": "view"
          },
          {
               "type": "function",
               "name": "play",
               "inputs": [
                    {
                         "name": "_c2",
                         "type": "uint8"
                    }
               ],
               "outputs": [],
               "stateMutability": "payable"
          },
          {
               "type": "function",
               "name": "solve",
               "inputs": [
                    {
                         "name": "_c1",
                         "type": "uint8"
                    },
                    {
                         "name": "_salt",
                         "type": "uint256"
                    }
               ],
               "outputs": [],
               "stateMutability": "nonpayable"
          },
          {
               "type": "function",
               "name": "stake",
               "inputs": [],
               "outputs": [
                    {
                         "name": "",
                         "type": "uint256"
                    }
               ],
               "stateMutability": "view"
          },
          {
               "type": "function",
               "name": "win",
               "inputs": [
                    {
                         "name": "_c1",
                         "type": "uint8"
                    },
                    {
                         "name": "_c2",
                         "type": "uint8"
                    }
               ],
               "outputs": [
                    {
                         "name": "w",
                         "type": "bool"
                    }
               ],
               "stateMutability": "view"
          }
     ],
     "bytecode": {
          "object": "0x608060405261012c600555604051604080610a73833981018060405281019080805190602001909291908051906020019092919050505034600481905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160028160001916905550426006819055505050610992806100e16000396000f30060806040526004361061009d5760003560e01c63ffffffff1680630c4395b9146100a2578063294914a4146100f75780633a4b66f11461010e57806348e257cb146101395780634d03e3d21461017257806353a04b05146101a557806380985af9146101c857806389f71d531461021f578063a5ddec7c1461024a578063c37597c614610284578063c8391142146102db578063f56f48f2146102f2575b600080fd5b3480156100ae57600080fd5b506100dd600480360381019080803560ff169060200190929190803560ff16906020019092919050505061031d565b604051808215151515815260200191505060405180910390f35b34801561010357600080fd5b5061010c6103e6565b005b34801561011a57600080fd5b50610123610491565b6040518082815260200191505060405180910390f35b34801561014557600080fd5b5061014e610497565b6040518082600581111561015e57fe5b60ff16815260200191505060405180910390f35b34801561017e57600080fd5b506101876104aa565b60405180826000191660001916815260200191505060405180910390f35b6101c6600480360381019080803560ff1690602001909291905050506104b0565b005b3480156101d457600080fd5b506101dd6105a3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022b57600080fd5b506102346105c9565b6040518082815260200191505060405180910390f35b34801561025657600080fd5b50610282600480360381019080803560ff169060200190929190803590602001909291905050506105cf565b005b34801561029057600080fd5b5061029961088b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e757600080fd5b506102f06108b0565b005b3480156102fe57600080fd5b50610307610960565b6040518082815260200191505060405180910390f35b600081600581111561032b57fe5b83600581111561033757fe5b141561034657600090506103e0565b6000600581111561035357fe5b83600581111561035f57fe5b141561036e57600090506103e0565b600282600581111561037c57fe5b81151561038557fe5b06600284600581111561039457fe5b81151561039d57fe5b0614156103c4578160058111156103b057fe5b8360058111156103bc57fe5b1090506103e0565b8160058111156103d057fe5b8360058111156103dc57fe5b1190505b92915050565b600060058111156103f357fe5b600360009054906101000a900460ff16600581111561040e57fe5b14151561041a57600080fd5b600554600654014211151561042e57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050506000600481905550565b60045481565b600360009054906101000a900460ff1681565b60025481565b600060058111156104bd57fe5b600360009054906101000a900460ff1660058111156104d857fe5b1415156104e457600080fd5b600060058111156104f157fe5b8160058111156104fd57fe5b1415151561050a57600080fd5b6004543414151561051a57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561057657600080fd5b80600360006101000a81548160ff0219169083600581111561059457fe5b02179055504260068190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600060058111156105dc57fe5b8260058111156105e857fe5b141515156105f557600080fd5b6000600581111561060257fe5b600360009054906101000a900460ff16600581111561061d57fe5b1415151561062a57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561068557600080fd5b6002546000191682826040518083600581111561069e57fe5b60ff1660f81b8152600101828152602001925050506040518091039020600019161415156106cb57600080fd5b6106e482600360009054906101000a900460ff1661031d565b1561074a576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f193505050505061087f565b610763600360009054906101000a900460ff168361031d565b156107ca57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f193505050505061087e565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f1935050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050505b5b60006004819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060058111156108bd57fe5b600360009054906101000a900460ff1660058111156108d857fe5b141515156108e557600080fd5b60055460065401421115156108f957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f19350505050506000600481905550565b600554815600a165627a7a723058202c37de6fb059835cf90c455acb37fefab1c50a82ddd491c23966286be642b3130029",
          "sourceMap": "437:3810:0:-;;;984:9;959:34;;1424:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:9;1485:5;:17;;;;1574:10;1569:2;;:15;;;;;;;;;;;;;;;;;;1599:3;1594:2;;:8;;;;;;;;;;;;;;;;;;1621:7;1612:6;:16;;;;;;;1651:3;1638:10;:16;;;;1424:237;;437:3810;;;;;;",
          "linkReferences": {}
     },
     "deployedBytecode": {
          "object": "0x60806040526004361061009d5760003560e01c63ffffffff1680630c4395b9146100a2578063294914a4146100f75780633a4b66f11461010e57806348e257cb146101395780634d03e3d21461017257806353a04b05146101a557806380985af9146101c857806389f71d531461021f578063a5ddec7c1461024a578063c37597c614610284578063c8391142146102db578063f56f48f2146102f2575b600080fd5b3480156100ae57600080fd5b506100dd600480360381019080803560ff169060200190929190803560ff16906020019092919050505061031d565b604051808215151515815260200191505060405180910390f35b34801561010357600080fd5b5061010c6103e6565b005b34801561011a57600080fd5b50610123610491565b6040518082815260200191505060405180910390f35b34801561014557600080fd5b5061014e610497565b6040518082600581111561015e57fe5b60ff16815260200191505060405180910390f35b34801561017e57600080fd5b506101876104aa565b60405180826000191660001916815260200191505060405180910390f35b6101c6600480360381019080803560ff1690602001909291905050506104b0565b005b3480156101d457600080fd5b506101dd6105a3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022b57600080fd5b506102346105c9565b6040518082815260200191505060405180910390f35b34801561025657600080fd5b50610282600480360381019080803560ff169060200190929190803590602001909291905050506105cf565b005b34801561029057600080fd5b5061029961088b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e757600080fd5b506102f06108b0565b005b3480156102fe57600080fd5b50610307610960565b6040518082815260200191505060405180910390f35b600081600581111561032b57fe5b83600581111561033757fe5b141561034657600090506103e0565b6000600581111561035357fe5b83600581111561035f57fe5b141561036e57600090506103e0565b600282600581111561037c57fe5b81151561038557fe5b06600284600581111561039457fe5b81151561039d57fe5b0614156103c4578160058111156103b057fe5b8360058111156103bc57fe5b1090506103e0565b8160058111156103d057fe5b8360058111156103dc57fe5b1190505b92915050565b600060058111156103f357fe5b600360009054906101000a900460ff16600581111561040e57fe5b14151561041a57600080fd5b600554600654014211151561042e57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050506000600481905550565b60045481565b600360009054906101000a900460ff1681565b60025481565b600060058111156104bd57fe5b600360009054906101000a900460ff1660058111156104d857fe5b1415156104e457600080fd5b600060058111156104f157fe5b8160058111156104fd57fe5b1415151561050a57600080fd5b6004543414151561051a57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561057657600080fd5b80600360006101000a81548160ff0219169083600581111561059457fe5b02179055504260068190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600060058111156105dc57fe5b8260058111156105e857fe5b141515156105f557600080fd5b6000600581111561060257fe5b600360009054906101000a900460ff16600581111561061d57fe5b1415151561062a57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561068557600080fd5b6002546000191682826040518083600581111561069e57fe5b60ff1660f81b8152600101828152602001925050506040518091039020600019161415156106cb57600080fd5b6106e482600360009054906101000a900460ff1661031d565b1561074a576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f193505050505061087f565b610763600360009054906101000a900460ff168361031d565b156107ca57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f193505050505061087e565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f1935050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050505b5b60006004819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060058111156108bd57fe5b600360009054906101000a900460ff1660058111156108d857fe5b141515156108e557600080fd5b60055460065401421115156108f957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f19350505050506000600481905550565b600554815600a165627a7a723058202c37de6fb059835cf90c455acb37fefab1c50a82ddd491c23966286be642b3130029",
          "sourceMap": "437:3810:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3914:331;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3914:331:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3465:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3465:200:0;;;;;;905:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;905:20:0;;;;;;;;;;;;;;;;;;;;;;;842:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;842:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;794:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1772:335;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;522:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1087:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1087:25:0;;;;;;;;;;;;;;;;;;;;;;;2364:752;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2364:752:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;;3189:204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3189:204:0;;;;;;959:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;959:34:0;;;;;;;;;;;;;;;;;;;;;;;3914:331;3965:6;3994:3;3987:10;;;;;;;;:3;:10;;;;;;;;;3983:255;;;4006:5;3999:12;;;;3983:255;4083:9;4076:16;;;;;;;;:3;:16;;;;;;;;;4072:166;;;4101:5;4094:12;;;;4072:166;4184:1;4177:3;4172:9;;;;;;;;:13;;;;;;;;4167:1;4160:3;4155:9;;;;;;;;:13;;;;;;;;:30;4151:87;;;4201:3;4195:9;;;;;;;;:3;:9;;;;;;;;;4187:18;;;;4151:87;4234:3;4228:9;;;;;;;;:3;:9;;;;;;;;;4220:18;;3914:331;;;;;:::o;3465:200::-;3510:9;3504:15;;;;;;;;:2;;;;;;;;;;;:15;;;;;;;;;3496:24;;;;;;;;3579:7;;3566:10;;:20;3560:3;:26;3552:35;;;;;;;;3625:2;;;;;;;;;;;:7;;:14;3633:5;;3625:14;;;;;;;;;;;;;;;;;;;;;;;;3657:1;3649:5;:9;;;;3465:200::o;905:20::-;;;;:::o;842:14::-;;;;;;;;;;;;;:::o;794:21::-;;;;:::o;1772:335::-;1828:9;1822:15;;;;;;;;:2;;;;;;;;;;;:15;;;;;;;;;1814:24;;;;;;;;1889:9;1882:16;;;;;;;;:3;:16;;;;;;;;;;1874:25;;;;;;;;1953:5;;1940:9;:18;1932:27;;;;;;;;2017:2;;;;;;;;;;;2003:16;;:10;:16;;;1995:25;;;;;;;;2071:3;2066:2;;:8;;;;;;;;;;;;;;;;;;;;;;;;2097:3;2084:10;:16;;;;1772:335;:::o;522:17::-;;;;;;;;;;;;;:::o;1087:25::-;;;;:::o;2364:752::-;2429:9;2422:16;;;;;;;;:3;:16;;;;;;;;;;2414:25;;;;;;;;2500:9;2494:15;;;;;;;;:2;;;;;;;;;;;:15;;;;;;;;;;2486:24;;;;;;;;2567:2;;;;;;;;;;;2553:16;;:10;:16;;;2545:25;;;;;;;;2634:6;;2609:31;;;2619:3;2624:5;2609:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;;2601:40;;;;;;;;2926:12;2930:3;2935:2;;;;;;;;;;;2926:3;:12::i;:::-;2922:169;;;2940:2;;;;;;;;;;;:7;;:18;2952:5;;2948:1;:9;2940:18;;;;;;;;;;;;;;;;;;;;;;;;2922:169;;;2977:12;2981:2;;;;;;;;;;;2985:3;2977;:12::i;:::-;2973:118;;;2991:2;;;;;;;;;;;:7;;:18;3003:5;;2999:1;:9;2991:18;;;;;;;;;;;;;;;;;;;;;;;;2973:118;;;3038:2;;;;;;;;;;;:7;;:14;3046:5;;3038:14;;;;;;;;;;;;;;;;;;;;;;;;3066:2;;;;;;;;;;;:7;;:14;3074:5;;3066:14;;;;;;;;;;;;;;;;;;;;;;;;2973:118;2922:169;3108:1;3100:5;:9;;;;2364:752;;:::o;456:17::-;;;;;;;;;;;;;:::o;3189:204::-;3234:9;3228:15;;;;;;;;:2;;;;;;;;;;;:15;;;;;;;;;;3220:24;;;;;;;;3303:7;;3290:10;;:20;3284:3;:26;3276:35;;;;;;;;3349:2;;;;;;;;;;;:7;;:18;3361:5;;3357:1;:9;3349:18;;;;;;;;;;;;;;;;;;;;;;;;3385:1;3377:5;:9;;;;3189:204::o;959:34::-;;;;:::o",
          "linkReferences": {}
     },
     "methodIdentifiers": {
          "TIMEOUT()": "f56f48f2",
          "c1Hash()": "4d03e3d2",
          "c2()": "48e257cb",
          "j1()": "c37597c6",
          "j1Timeout()": "c8391142",
          "j2()": "80985af9",
          "j2Timeout()": "294914a4",
          "lastAction()": "89f71d53",
          "play(uint8)": "53a04b05",
          "solve(uint8,uint256)": "a5ddec7c",
          "stake()": "3a4b66f1",
          "win(uint8,uint8)": "0c4395b9"
     },
     "rawMetadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_c1\",\"type\":\"uint8\"},{\"name\":\"_c2\",\"type\":\"uint8\"}],\"name\":\"win\",\"outputs\":[{\"name\":\"w\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"j2Timeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"c2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"c1Hash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_c2\",\"type\":\"uint8\"}],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"j2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastAction\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_c1\",\"type\":\"uint8\"},{\"name\":\"_salt\",\"type\":\"uint256\"}],\"name\":\"solve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"j1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"j1Timeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TIMEOUT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_c1Hash\",\"type\":\"bytes32\"},{\"name\":\"_j2\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"j1Timeout()\":{\"details\":\"Let j2 get the funds back if j1 did not play.\"},\"j2Timeout()\":{\"details\":\"Let j1 take back the funds if j2 never play.\"},\"play(uint8)\":{\"details\":\"To be called by j2 and provided stake.\",\"params\":{\"_c2\":\"The move submitted by j2.\"}},\"solve(uint8,uint256)\":{\"details\":\"To be called by j1. Reveal the move and send the ETH to the winning party or split them.\",\"params\":{\"_c1\":\"The move played by j1.\",\"_salt\":\"The salt used when submitting the commitment when the constructor was called.\"}},\"win(uint8,uint8)\":{\"details\":\"Is this move winning over the other.\",\"params\":{\"_c1\":\"The first move.\",\"_c2\":\"The move the first move is considered again.\"},\"return\":\"w True if c1 beats c2. False if c1 is beaten by c2 or in case of tie.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/RPS.sol\":\"RPS\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/RPS.sol\":{\"keccak256\":\"0x31cdc940c44878c1c900927c2990955e613546cf2952c5d505e7835cdae61465\",\"urls\":[\"bzzr://b9bbacdb229547746e83aabb431a29689306bc66610989295a25e96b9841bde3\"]}},\"version\":1}",
     "metadata": {
          "compiler": {
               "version": "0.4.26+commit.4563c3fc"
          },
          "language": "Solidity",
          "output": {
               "abi": [
                    {
                         "inputs": [
                              {
                                   "internalType": null,
                                   "name": "_c1",
                                   "type": "uint8"
                              },
                              {
                                   "internalType": null,
                                   "name": "_c2",
                                   "type": "uint8"
                              }
                         ],
                         "stateMutability": "view",
                         "type": "function",
                         "name": "win",
                         "outputs": [
                              {
                                   "internalType": null,
                                   "name": "w",
                                   "type": "bool"
                              }
                         ]
                    },
                    {
                         "inputs": [],
                         "stateMutability": "nonpayable",
                         "type": "function",
                         "name": "j2Timeout"
                    },
                    {
                         "inputs": [],
                         "stateMutability": "view",
                         "type": "function",
                         "name": "stake",
                         "outputs": [
                              {
                                   "internalType": null,
                                   "name": "",
                                   "type": "uint256"
                              }
                         ]
                    },
                    {
                         "inputs": [],
                         "stateMutability": "view",
                         "type": "function",
                         "name": "c2",
                         "outputs": [
                              {
                                   "internalType": null,
                                   "name": "",
                                   "type": "uint8"
                              }
                         ]
                    },
                    {
                         "inputs": [],
                         "stateMutability": "view",
                         "type": "function",
                         "name": "c1Hash",
                         "outputs": [
                              {
                                   "internalType": null,
                                   "name": "",
                                   "type": "bytes32"
                              }
                         ]
                    },
                    {
                         "inputs": [
                              {
                                   "internalType": null,
                                   "name": "_c2",
                                   "type": "uint8"
                              }
                         ],
                         "stateMutability": "payable",
                         "type": "function",
                         "name": "play"
                    },
                    {
                         "inputs": [],
                         "stateMutability": "view",
                         "type": "function",
                         "name": "j2",
                         "outputs": [
                              {
                                   "internalType": null,
                                   "name": "",
                                   "type": "address"
                              }
                         ]
                    },
                    {
                         "inputs": [],
                         "stateMutability": "view",
                         "type": "function",
                         "name": "lastAction",
                         "outputs": [
                              {
                                   "internalType": null,
                                   "name": "",
                                   "type": "uint256"
                              }
                         ]
                    },
                    {
                         "inputs": [
                              {
                                   "internalType": null,
                                   "name": "_c1",
                                   "type": "uint8"
                              },
                              {
                                   "internalType": null,
                                   "name": "_salt",
                                   "type": "uint256"
                              }
                         ],
                         "stateMutability": "nonpayable",
                         "type": "function",
                         "name": "solve"
                    },
                    {
                         "inputs": [],
                         "stateMutability": "view",
                         "type": "function",
                         "name": "j1",
                         "outputs": [
                              {
                                   "internalType": null,
                                   "name": "",
                                   "type": "address"
                              }
                         ]
                    },
                    {
                         "inputs": [],
                         "stateMutability": "nonpayable",
                         "type": "function",
                         "name": "j1Timeout"
                    },
                    {
                         "inputs": [],
                         "stateMutability": "view",
                         "type": "function",
                         "name": "TIMEOUT",
                         "outputs": [
                              {
                                   "internalType": null,
                                   "name": "",
                                   "type": "uint256"
                              }
                         ]
                    },
                    {
                         "inputs": [
                              {
                                   "internalType": null,
                                   "name": "_c1Hash",
                                   "type": "bytes32"
                              },
                              {
                                   "internalType": null,
                                   "name": "_j2",
                                   "type": "address"
                              }
                         ],
                         "stateMutability": "payable",
                         "type": "constructor"
                    }
               ],
               "devdoc": {
                    "methods": {
                         "j1Timeout()": {
                              "details": "Let j2 get the funds back if j1 did not play."
                         },
                         "j2Timeout()": {
                              "details": "Let j1 take back the funds if j2 never play."
                         },
                         "play(uint8)": {
                              "details": "To be called by j2 and provided stake.",
                              "params": {
                                   "_c2": "The move submitted by j2."
                              }
                         },
                         "solve(uint8,uint256)": {
                              "details": "To be called by j1. Reveal the move and send the ETH to the winning party or split them.",
                              "params": {
                                   "_c1": "The move played by j1.",
                                   "_salt": "The salt used when submitting the commitment when the constructor was called."
                              }
                         },
                         "win(uint8,uint8)": {
                              "details": "Is this move winning over the other.",
                              "params": {
                                   "_c1": "The first move.",
                                   "_c2": "The move the first move is considered again."
                              },
                              "return": "w True if c1 beats c2. False if c1 is beaten by c2 or in case of tie."
                         }
                    }
               },
               "userdoc": {
                    "methods": {}
               }
          },
          "settings": {
               "remappings": [
                    "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                    "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                    "forge-std/=lib/forge-std/src/",
                    "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                    "openzeppelin-contracts/=lib/openzeppelin-contracts/"
               ],
               "optimizer": {
                    "enabled": false,
                    "runs": 200
               },
               "compilationTarget": {
                    "src/RPS.sol": "RPS"
               },
               "evmVersion": "constantinople",
               "libraries": {}
          },
          "sources": {
               "src/RPS.sol": {
                    "keccak256": "0x31cdc940c44878c1c900927c2990955e613546cf2952c5d505e7835cdae61465",
                    "urls": [
                         "bzzr://b9bbacdb229547746e83aabb431a29689306bc66610989295a25e96b9841bde3"
                    ],
                    "license": null
               }
          },
          "version": 1
     },
     "id": 0
}